// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/2/Inc16.hdl
/**
 * 16-bit incrementer:
 * out = in + 1
 */
CHIP Inc16 {
    IN in[16];
    OUT out[16];

    PARTS:
    //// Replace this comment with your code.
    And(a= in[0], b= in[1], out= and01);
    And(a= in[2], b= in[3], out= and23);
    And(a= in[4], b= in[5], out= and45);
    And(a= in[6], b= in[7], out= and67);
    And(a= in[8], b= in[9], out= and89);
    And(a= in[10], b= in[11], out= and1011);
    And(a= in[12], b= in[13], out= and1213);
    
    And(a= and01, b= and23, out= and03);
    And(a= and45, b= and67, out= and47);
    And(a= and89, b= and1011, out= and811);
    
    And(a= and03, b= and47, out= and07);

    Not(in= in[0], out= out[0]);
    Xor(a= in[0], b=in[1] , out= out[1]);
    Xor(a= and01, b=in[2] , out= out[2]);
    And(a= in[2], b= and01, out= and02);
    Xor(a = and02, b = in[3], out = out[3]);
    Xor(a = and03, b = in[4], out = out[4]);
    And(a= in[4], b=and03,out=and04);
    Xor(a = and04, b = in[5], out = out[5]);
    And(a = and03, b = and45, out = and05);
    Xor(a = and05, b = in[6], out = out[6]);
    And(a= and05, b= in[6], out= and06);
    Xor(a = and06, b = in[7], out = out[7]);
    Xor(a = and07, b = in[8], out = out[8]);
    And(a = and07, b = in[8], out = and08); 
    Xor(a = and08, b = in[9], out = out[9]);
    And(a = and07, b = and89, out = and09);
    Xor(a = and09, b = in[10], out = out[10]);
    And(a = and09, b = in[10], out = and010);
    Xor(a = and010, b = in[11], out = out[11]);
    And(a = and07, b = and811, out = and011);
    Xor(a = and011, b = in[12], out = out[12]);
    And(a = and011, b = in[12], out = and012);
    Xor(a = and012, b = in[13], out = out[13]);
    And(a = and011, b= and1213, out = and013);
    Xor(a = and013, b = in[14], out=out[14]);
    And(a = and013, b = in[14], out = and014);
    Xor(a = and014, b = in[15], out = out[15]);
}