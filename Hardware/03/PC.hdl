// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/3/a/PC.hdl
/**
 * A 16-bit counter.
 * if      reset(t): out(t+1) = 0
 * else if load(t):  out(t+1) = in(t)
 * else if inc(t):   out(t+1) = out(t) + 1
 * else              out(t+1) = out(t)
 */
CHIP PC {
    IN in[16], reset, load, inc;
    OUT out[16];
    
    PARTS:
    //// Replace this comment with your code.

    //sel1 Nor(reset , load)
    Not(in=reset, out=notreset );
    Not(in=load, out=notload );
    Nand(a= notreset, b= notload, out=notsel1);
    Not(in= notsel1 , out= sel1);

    //sel0 !reset and (load or !inc)
    
    Not(in= inc, out= notinc);
    Nand(a= notload, b= inc, out= loadOrNotInc);
    And(a = notreset, b = loadOrNotInc, out = sel0);

    Inc16(in= curout, out= outtplus1);
    Mux4Way16(a= false, b= in, c= outtplus1, d=curout, sel[0]=sel0, sel[1]=sel1 , out= out1);
    
    Nand(a= sel1, b= notinc, out = load1);
    
    Register(in= out1, load= load1, out= out, out = curout);
    
}